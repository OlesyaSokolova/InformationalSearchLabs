1. Каким образом данные HTML-формы, переданные пользователем, становятся доступными PHP-программе?
через передачу в строке браузера -> затем получение:
метод передачи GET (короткая строка с данными) или POST (большой объем данных)

2. Как обрабатывать информацию от элементов, которые позволяют выбирать несколько значений из списка?
Для того чтобы программа могла иметь доступ ко всем значениям, выбранным пользователем,
нужно к имени данного элемента приписать пару пустых квадратных скобок (т.е. создать массив).
<p><input type="checkbox" name="hobby[]"
    value="слушать музыку">слушать музыку
<p><input type="checkbox" name="hobby[]"
    value="читать книгу">читать книгу

3. Опишите способы, позволяющие узнать используемый метод передачи данных.
    1. Вы можете определить, какой метод использовался для передачи,
просмотрев значение переменной среды $REQUEST_METHOD, в которой будет записано POST или GET.
    2. Кроме того, есть еще один способ узнать используемый метод, если помнить о том,
что массив $_POST существует только при использовании метода POST:
$PARAMS = (isset($_POST))? $_POST : $_GET;

4. Как создать HTML-форму, вызывающую саму себя?
Как бы мы ни назвали файл, содержащий эту форму, все равно форма будет обращаться к этому файлу,
так как в ней в атрибуте ACTION есть переменная $_SERVER['PHP_SELF'].

5. Для чего используется функция header()?
header() используется для отправки HTTP-заголовка.
Помните, что функцию header() можно вызывать только если клиенту ещё не передавались данные.
То есть она должна идти первой в выводе, перед её вызовом не должно быть никаких HTML-тегов,
пустых строк и т.п.

Когда программа на сервере общается с клиентом, она должна сначала послать некоторые заголовки,
содержащие информацию о том документе, который за ними следует. Обычно РНР делает это автоматически,
но вы можете послать свой собственный заголовок с помощью функции header().
Но прежде чем послать заголовок, вы должны убедиться в том, что никаких данных от вашей программы
на браузер пока не поступало. К тому моменту, когда данные посылаются на браузер,
заголовки уже отправлены и вам уже поздно посылать свой собственный заголовок.
Даже простой перевод строки или единственный пробел приводят к тому, что программа посылает
заголовок типа содержания. Если вы хотите послать свой собственный заголовок с помощью функции header(),
то должны проверить программу и убедиться, что ничего пока не отправлено.
Послав браузеру заголовок "Location", вы перенаправите пользователя на новую страницу:
header ("Location: http://www.my_new_site.ru");

<?php
header("Location: http://www.example.com/"); /* Перенаправление браузера */
/* Убедиться, что код ниже не выполнится после перенаправления .*/
exit;
?>
